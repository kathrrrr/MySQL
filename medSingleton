#import tkinter 
from tkinter import *
import mysql.connector
from mysql.connector import Error


class SingletonMeta(type):
    _instances = {}
    def __call__(cls, *args, **kwargs):
        if cls not in cls._instances:
            cls._instances[cls] = super().__call__(*args, **kwargs)
        return cls._instances[cls]

class DatabaseConnection(metaclass=SingletonMeta):
    conn = None
    def __init__(self):
        if self.conn is None:
            try:
                self.conn = mysql.connector.connect(host='localhost',
                                                   database='kathrr',
                                                   user='kathrr',
                                                   password='1234')
                if self.conn.is_connected():
                    db_Info = self.conn.get_server_info()
                    print("Connected to MySQL Server version ", db_Info)
                    self.cursor = self.conn.cursor()
                    self.cursor.execute("select database();")
                    record = self.cursor.fetchone()
                    print("You're connected to database: ", record)
            except Error as e:
                print("Error while connecting to MySQL", e)
        else:
            print("Connection already exists")
        print("type of curser: ", type(self.cursor))

    


# initDB - opretter tabel

def initDB():
    db = DatabaseConnection()
    db.cursor.execute("create table if not exists users(id int primary key auto_increment, name varchar(255), password varchar(255) )")
    db.conn.commit()
    print("Table created")
    print(dir(db))



# create - opretter bruger  
def create():
    
    global usernm, passwd
    username = usernm.get()
    password = passwd.get()
    print("create")
    print(username)
    db = DatabaseConnection()
    db.cursor.execute("SELECT * FROM users WHERE name = %s",(username,))
    result = db.cursor.fetchall()
    print(result)
    print(usernm)
    if result:
        L3.config(text="Navnet er allerede i brug. Skriv et andet navn")
    else:
        print("Navnet er ikke i brug")
        db.cursor.execute("insert into users(name, password) values(%s, %s)", (username, password))  
        L3.config(text="Brugeren er oprettet")  
        db.conn.commit()
    print("Brugeren er oprettet")


# login - logger bruger ind
def login():
    global usernm, passwd
    username = usernm.get()
    password = passwd.get()
    print("login")
    db = DatabaseConnection()
    db.cursor.execute("SELECT password FROM users WHERE name = %s",(username,))
    result = db.cursor.fetchall()
    print(result)
    if result:
        result = result[0][0]
        if result == password:
            print("Brugeren findes og password er korrekt")
            L3.config(text="Du er logget ind")
        else:
            L3.config(text="Password er forkert")
        print(result)
    else:
        print("Brugeren findes ikke")
        L3.config(text="Brugeren findes ikke")



def initTkinter():
    global usernm, passwd, L3
    #usernm.delete(0, END)
    #passwd.delete(0, END)
    #L3.config(text="")
    print("init")   

 
    root = Tk() 
    root.geometry("600x300")  
    L1 = Label(root, text="User Name") 
    L1.grid(row=0,column=0) 
    L2 = Label(root, text="Password") 
    L2.grid(row=1,column=0) 
  

  
    usernm = Entry()
    usernm.grid(row=0,column=1, 
                      padx=10,pady=10) 
    passwd = Entry()
    passwd.grid(row=1,column=1, 
                      padx=10,pady=10) 
    print("username: ", usernm)

    # Create a Button
    btn = Button(root, text = 'Opret', bd = '5',
                          command = create).grid(row=3, column=1) 
    btn1 = Button(root, text = 'login', bd = '5',
                          command = login).grid(row=3, column = 2) 

    L3 = Label(root, text="") 
    L3.grid(row=4,column=1)
 
# Set the position of button on the top of window.   
#btn.pack(side = 'bottom')   


initDB()
initTkinter()

mainloop() 